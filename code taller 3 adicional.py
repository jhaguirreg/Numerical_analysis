# -*- coding: utf-8 -*-
"""Taller análisis numérico 3.5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RHALy68MBbcbL7YgyiuI5B0ilRyeg4zy

# Consistencia:

Ya que definimos:

$\psi(\mu)=\sum_{m=0}^r\alpha_m\mu^m$.

$\sigma(\mu)=\sum_{m=0}^r\beta_mf_{j+m}$.

Tenemos que:

$\psi(\mu)=\psi_1(\mu)=\mu^2+\mu+\alpha$.

$\sigma(\mu)=\sigma_1(\mu)=\mu^2+\beta$

Para verificar si el sistema es consistente de orden $k$ se debe cumplir dos condiciones:

1. $\psi_1(1)=0$.  

2.  Para $j\in\{1,...,k\}, \psi_{j+1}(1)=j\sigma_j(1)$.

Veamos que se cumple la condición 1:

$\psi_1(1)=(1)^2+(1)+\alpha=0$, esto nos indica que $\alpha=-2$.

Para comprobar la condición 2 recordemos que $\psi_{j+1}(\mu)=\mu\psi_j'$ y $\sigma_{j+1}(\mu)=\mu\sigma_j'$. Así:

$\psi_2(\mu)=\mu(2\mu+1)=2\mu^2+\mu$.

Entonces se debe cumplir que $\psi_2(1)=\sigma_1(1)$:

$\psi_2(1)=(2+1)=1+\beta=\sigma_1(1)$, de esta igualdad tenemos que $\beta=2$.

Ahora, tenemos que el sistemas es consistente de al menos orden 1, veamos si resulta consistente de orden 2, calculemos:

$\sigma_2(\mu)=2\mu^2$.

$\psi_3(\mu)=\mu(4\mu+1)=4\mu^2+\mu$

Ahora se debe cumplir que $\psi_3(1)=2\sigma_2(1)$:

$\psi_3(1)=(4+1)=5\neq4=2\sigma_2(1)$.

Así tenemos que el sistema es consistente de orden 1 ya que no cumple la condición a partir del orden 2.

# Cero estable:

Sea $q$ un polinomio. Se dice que $q$ satisface el criterio de la raíz si todas sus raíces caen dentro o sobre el círculo unitario, siendo aquellas que caen en la circunferencia unitaria, raíces simples. Es decir:

a) $\forall \mu \in \mathbb{C}: q(\mu)=0 \Rightarrow|\mu| \leq 1$,

b) $\forall \mu \in \mathbb{C}: q(\mu)=0:\left(|\mu|=1 \Rightarrow q^{\prime}(\mu) \neq 0\right)$.

El método multipaso se dice que es cero-estable si su primer polinomio característico, $\psi_1$, satisface la condición de la raíz.

Utilizando la formula cuadrática sobre el polinomio $\psi_1(\mu)=\mu^2+\mu+\alpha$., llegamos a que las raices de este son $\frac{-1+\sqrt{1-4\alpha}}{2}$ y $\frac{-1-\sqrt{1-4\alpha}}{2}$. Despejando los valores en que debe estar $\alpha$ para que la satisfaga, llegamos a que $\alpha\in[-2,0]$.

# Convergencia:

Para que sea convergente es necesario que sea cero estable y consistente, cabe resaltar que se conserva el orden de consistencia, así, el sistema es convergente cuando $\alpha=-2$ ya que es cero estable y consistente.

Como se nota en esta parte, se da respuesta positiva al inciso d, ya que en más alto orden de consistencia es 1 y ahí el sistema es convergente.
"""

# Importamos libreria:
from sympy import *

# Definimos los simbolos
x = symbols('x')
b = symbols('b')

# Definimos las funciones:
psi_1 = x**2 + (b-1)*x - b
sigma_1 = ((b+3)/4)*x**2 + (3*b+1)/4

# Generamos listas para guardar los valores de las funciones:
psiFuncs = [psi_1]
sigmaFuncs = [sigma_1]
orden=0

# Consistencia:
while True:
  # Evaluamos la primera condición:
  if psiFuncs[0].subs(x,1) != 0:
    break

  # Evaluamos la segunda condición:
  # Sacamos las funciones anteriores:
  psi_j = psiFuncs[-1]
  sigma_j = sigmaFuncs[-1]

  # Se calcula el siguiente de psi_j:
  psi_j_1 = x*diff(psi_j,x)
  print("si",psi_j_1)

  # Evaluamos si falla la condición de consistencia para el orden (orden+1):
  #if round(psi_j_1.subs(x,1),2) != round((orden+1)*sigma_j.subs(x,1),2):
  if psi_j_1.subs(x,1) != (orden+1)*sigma_j.subs(x,1):
    break
  else:
    # Como cumple la condición de consistencia actualizamos la variable:
    orden = orden + 1

    # Calculamos el siguiente de sigma_j:
    sigma_j_1 = x*diff(sigma_j,x)
    print("sigma",sigma_j_1)
    sigmaFuncs.append(sigma_j_1)
    psiFuncs.append(psi_j_1)

print(f"El método es de orden {orden}")

# Cero estable:
raices=solve(psi_1,x)
cero_estable=True
for raiz in raices:
  if abs(raiz)<=1:
    print(f"La raíz {raiz} se encuentra dentro o sobre el círculo unitario.")
  else:
    print(f"La raíz {raiz} no se encuentra dentro o sobre el círculo unitario.")
    cero_estable=False
print(f"Cero estable: {cero_estable}")